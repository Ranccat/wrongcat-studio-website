<!-- C# 전용 상속과 DI -->
@inherits LayoutComponentBase
@inject AuthStateProvider authState;
@inject NavigationManager navigation;

<!-- 웹페이지 레이아웃 (이 레이아웃 안에 각 페이지가 들어가는거임) -->
<!-- 지금 이 파일 아래로 내리면 "@Body" 가 보이는데, 이 자리가 각 페이지가 들어가는 자리 -->
<div class="page @backgroundClass">

    <!-- nav-bar container -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">

            <!-- logo -->
            <a class="navbar-brand" href="/">Home</a>

            <!-- nav-bar on collapse -->
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- nav-bar links (모든 링크 모으는 컨테이너) -->
            <div class="collapse navbar-collapse" id="navbarNav">

                <!-- main links (게임, about 등이 있는 곳) -->
                <!-- 대문자 NavLink 태그는 C# 전용이라 갈아끼우면 됨 -->
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <NavLink class="nav-link main-link" href="about" Match="NavLinkMatch.All">
                            About
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link main-link" href="games">
                            Games
                        </NavLink>
                    </li>
                </ul>

                <!-- account links (로그인, 회원가입, 프로필 등 유저 관련 링크들) -->
                <!-- 네브 바 맨 오른쪽에 좀더 작은 사이즈로 존재함 -->
                <ul class="navbar-nav">
                    @if (isLoggedIn)
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="profile">
                                Profile
                            </NavLink>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="login">
                                Login
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="register">
                                Registration
                            </NavLink>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <!-- 여기가 각 페이지가 컴포넌트처럼 끼워지는 곳 -->
    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<!-- 에러 시 띄우는 div -->
<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<!-- js로 치면 여기가 이제 코드 들어가는 영역임 -->
<!-- 기능 1: 로그인이 되어있지 않다면 로그인, 회원가입 버튼을 두고, 로그인이 되어있다면 그 자리에 프로필 버튼을 띄움 -->
<!-- 기능 2: 유저 관련 페이지 (로그인/회원가입) 시에는 배경화면이 달라짐 -->
@code {
    private string backgroundClass = "background-default";
    private bool isLoggedIn = false;

    protected override void OnInitialized()
    {
        navigation.LocationChanged += PageRedirected;
        CheckLoginStatus();
        SetBackgroundImage(navigation.Uri);
    }

    private void CheckLoginStatus()
    {
        isLoggedIn = authState.IsLoggedIn();
        Console.WriteLine($"MainLayout {isLoggedIn}");
        StateHasChanged();
    }

    private void PageRedirected(object? sender, LocationChangedEventArgs e)
    {
        SetBackgroundImage(e.Location);
        StateHasChanged();
    }

    private void SetBackgroundImage(string url)
    {
        switch (url)
        {
            case string u when u.Equals("/"):
                backgroundClass = "background-default";
                break;
            case string u1 when u1.EndsWith("login"):
            case string u2 when u2.EndsWith("register"):
                backgroundClass = "background-account";
                break;
            default:
                backgroundClass = "background-default";
                break;
        }
    }

    public void Dispose()
    {
        navigation.LocationChanged -= PageRedirected;
    }
}
